# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

# NOTES: There is no such pair.
import math

pentagonal_numbers=list()

# Generate list of pentagonal numbers
def generate_pentagonal(n):
    for i in range(1,n):
        pentagonal_numbers.append(int(i*(3*i-1)/2))

# Check if a number is a pentagonal or not
def check_pentagonal(n):
    root=(1+math.sqrt(1+24*n))/6
    if root.is_integer():
        return True
    return False

def calculation():
    Smallest_Diff=1000
    for i in range(0, len(pentagonal_numbers)):
        for j in range(0, i):
            summation=pentagonal_numbers[i]+pentagonal_numbers[j]
            diff=pentagonal_numbers[i]-pentagonal_numbers[j]
            if not check_pentagonal(summation) or not check_pentagonal(diff):
                continue
            if (Smallest_Diff>diff):
                Smallest_Diff=diff
                print (Smallest_Diff,pentagonal_numbers[i],pentagonal_numbers[j])
# generate_pentagonal(1000)
# print(pentagonal_numbers)
